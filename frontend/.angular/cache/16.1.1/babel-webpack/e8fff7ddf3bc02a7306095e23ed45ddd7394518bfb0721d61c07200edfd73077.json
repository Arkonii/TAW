{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as shortid from 'shortid'; // Importowanie biblioteki shortid\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction HomeComponent_div_6_div_1_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_6_div_1_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const message_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.deleteMessage(message_r3));\n    });\n    i0.ɵɵtext(1, \"Usu\\u0144\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\")(2, \"span\", 12);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, HomeComponent_div_6_div_1_button_6_Template, 2, 0, \"button\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", message_r3.username, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r3.content);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r3.username === ctx_r2.username);\n  }\n}\nfunction HomeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, HomeComponent_div_6_div_1_Template, 7, 3, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.messages);\n  }\n}\nfunction HomeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Brak wiadomo\\u015Bci do wy\\u015Bwietlenia.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class HomeComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.messages = [];\n    this.isAuthenticated = false;\n    this.username = ''; // Nazwa zalogowanego użytkownika\n    this.messageForm = this.formBuilder.group({\n      content: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.isAuthenticated = this.checkAuthentication();\n    if (this.isAuthenticated) {\n      this.fetchMessages();\n    } else {\n      this.router.navigate(['/login']); // Przekierowanie do komponentu logowania\n    }\n  }\n\n  checkAuthentication() {\n    const token = localStorage.getItem('token'); // Pobierz token z localStorage\n    this.username = localStorage.getItem('login') ?? ''; // Pobierz login z localStorage i przypisz do username\n    if (token) {\n      // Sprawdź, czy token jest ważny (możesz wykonać dodatkowe sprawdzenia, np. sprawdzić jego ważność lub poprawność)\n      return true; // Użytkownik jest zalogowany\n    }\n\n    return false; // Użytkownik nie jest zalogowany\n  }\n\n  fetchMessages() {\n    // Pobierz wiadomości z serwera i przypisz do tablicy messages\n    this.http.get('http://localhost:3000/api/messages').subscribe(response => {\n      this.messages = response;\n    }, error => {\n      console.log('Błąd podczas pobierania wiadomości:', error);\n    });\n  }\n  submitMessage() {\n    if (this.messageForm.invalid) {\n      return;\n    }\n    if (!this.isAuthenticated) {\n      this.router.navigate(['/login']); // Przekierowanie do komponentu logowania\n      return;\n    }\n    const content = this.messageForm.controls['content'].value;\n    const token = localStorage.getItem('token'); // Pobierz token z localStorage\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    const messageId = shortid.generate(); // Wygenerowanie unikalnego identyfikatora\n    // Wysłanie wiadomości do serwera\n    this.http.post('http://localhost:3000/api/messages', {\n      id: messageId,\n      username: this.username,\n      content\n    }, {\n      headers,\n      responseType: 'text'\n    }).subscribe(response => {\n      console.log('Wiadomość wysłana');\n      this.messageForm.reset();\n      this.fetchMessages(); // Odświeżenie wiadomości po wysłaniu\n    }, error => {\n      console.log('Błąd podczas wysyłania wiadomości:', error);\n    });\n  }\n  deleteMessage(message) {\n    if (!message.id) {\n      console.log('Nie można usunąć wiadomości - brak identyfikatora');\n      return;\n    }\n    const token = localStorage.getItem('token'); // Pobierz token z localStorage\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    // Usunięcie wiadomości z serwera\n    this.http.delete(`http://localhost:3000/api/messages/${message.id}`, {\n      headers,\n      responseType: 'text'\n    }).subscribe(response => {\n      console.log('Wiadomość usunięta');\n      this.fetchMessages(); // Odświeżenie wiadomości po usunięciu\n    }, error => {\n      console.log('Błąd podczas usuwania wiadomości:', error);\n    });\n  }\n  logout() {\n    localStorage.removeItem('token'); // Usunięcie tokenu z localStorage\n    this.isAuthenticated = false;\n    this.router.navigate(['/login']); // Przekierowanie do komponentu logowania\n  }\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[2, \"position\", \"fixed\", \"top\", \"0\", \"right\", \"0\", \"padding\", \"10px\"], [3, \"click\"], [2, \"margin-top\", \"50px\"], [\"style\", \"display: flex; flex-direction: column-reverse;\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"position\", \"fixed\", \"bottom\", \"0\", \"left\", \"0\", \"right\", \"0\", \"padding\", \"10px\", \"background-color\", \"#f0f0f0\"], [2, \"display\", \"flex\", \"align-items\", \"center\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"content\", \"rows\", \"4\", \"placeholder\", \"Wpisz swoj\\u0105 wiadomo\\u015B\\u0107\", 2, \"flex\", \"1\"], [\"type\", \"submit\", 3, \"disabled\"], [2, \"display\", \"flex\", \"flex-direction\", \"column-reverse\"], [\"style\", \"padding: 10px; margin: 10px; background-color: #f0f0f0; display: flex; justify-content: space-between;\", 4, \"ngFor\", \"ngForOf\"], [2, \"padding\", \"10px\", \"margin\", \"10px\", \"background-color\", \"#f0f0f0\", \"display\", \"flex\", \"justify-content\", \"space-between\"], [1, \"username\"], [1, \"content\"], [3, \"click\", 4, \"ngIf\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_1_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(2, \"Wyloguj\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"h2\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, HomeComponent_div_6_Template, 2, 1, \"div\", 3);\n      i0.ɵɵtemplate(7, HomeComponent_div_7_Template, 3, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.submitMessage();\n      });\n      i0.ɵɵelement(10, \"textarea\", 7);\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵtext(12, \"Wy\\u015Blij\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"Witaj, \", ctx.username, \"!\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.messages.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.messages.length === 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.messageForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.messageForm.invalid);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n\\nh1[_ngcontent-%COMP%] {\\n  color: blue;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQWlDO0FBQ2pDO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIFN0eWxlIGZvciB0aGUgSG9tZSBjb21wb25lbnQgKi9cclxuaDEge1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcblxyXG5wIHtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","HttpHeaders","shortid","i0","ɵɵelementStart","ɵɵlistener","HomeComponent_div_6_div_1_button_6_Template_button_click_0_listener","ɵɵrestoreView","_r7","message_r3","ɵɵnextContext","$implicit","ctx_r5","ɵɵresetView","deleteMessage","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","HomeComponent_div_6_div_1_button_6_Template","ɵɵadvance","ɵɵtextInterpolate1","username","ɵɵtextInterpolate","content","ɵɵproperty","ctx_r2","HomeComponent_div_6_div_1_Template","ctx_r0","messages","HomeComponent","constructor","formBuilder","http","router","isAuthenticated","messageForm","group","required","ngOnInit","checkAuthentication","fetchMessages","navigate","token","localStorage","getItem","get","subscribe","response","error","console","log","submitMessage","invalid","controls","value","headers","set","messageId","generate","post","id","responseType","reset","message","delete","logout","removeItem","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","HomeComponent_Template_button_click_1_listener","HomeComponent_div_6_Template","HomeComponent_div_7_Template","HomeComponent_Template_form_ngSubmit_9_listener","ɵɵelement","length"],"sources":["C:\\Users\\Arcio\\Desktop\\Nowy folder\\VI semestr\\Technologie aplikacji webowych\\App\\untitled\\frontend\\src\\app\\home\\home.component.ts","C:\\Users\\Arcio\\Desktop\\Nowy folder\\VI semestr\\Technologie aplikacji webowych\\App\\untitled\\frontend\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport * as shortid from 'shortid'; // Importowanie biblioteki shortid\n\ninterface Message {\n  id: string; // Dodanie pola id do interfejsu Message\n  username: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  username: string;\n  messageForm: FormGroup;\n  messages: Message[] = [];\n  isAuthenticated: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {\n    this.username = ''; // Nazwa zalogowanego użytkownika\n    this.messageForm = this.formBuilder.group({\n      content: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.isAuthenticated = this.checkAuthentication();\n    if (this.isAuthenticated) {\n      this.fetchMessages();\n    } else {\n      this.router.navigate(['/login']); // Przekierowanie do komponentu logowania\n    }\n  }\n\n  checkAuthentication(): boolean {\n    const token = localStorage.getItem('token'); // Pobierz token z localStorage\n    this.username = localStorage.getItem('login') ?? ''; // Pobierz login z localStorage i przypisz do username\n\n    if (token) {\n      // Sprawdź, czy token jest ważny (możesz wykonać dodatkowe sprawdzenia, np. sprawdzić jego ważność lub poprawność)\n\n      return true; // Użytkownik jest zalogowany\n    }\n\n    return false; // Użytkownik nie jest zalogowany\n  }\n\n  fetchMessages() {\n    // Pobierz wiadomości z serwera i przypisz do tablicy messages\n    this.http.get<Message[]>('http://localhost:3000/api/messages')\n      .subscribe(\n        response => {\n          this.messages = response;\n        },\n        error => {\n          console.log('Błąd podczas pobierania wiadomości:', error);\n        }\n      );\n  }\n\n  submitMessage() {\n    if (this.messageForm.invalid) {\n      return;\n    }\n\n    if (!this.isAuthenticated) {\n      this.router.navigate(['/login']); // Przekierowanie do komponentu logowania\n      return;\n    }\n\n    const content = this.messageForm.controls['content'].value;\n\n    const token = localStorage.getItem('token'); // Pobierz token z localStorage\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    const messageId = shortid.generate(); // Wygenerowanie unikalnego identyfikatora\n\n    // Wysłanie wiadomości do serwera\n    this.http.post('http://localhost:3000/api/messages', { id: messageId, username: this.username, content }, { headers, responseType: 'text' })\n      .subscribe(\n        response => {\n          console.log('Wiadomość wysłana');\n          this.messageForm.reset();\n          this.fetchMessages(); // Odświeżenie wiadomości po wysłaniu\n        },\n        error => {\n          console.log('Błąd podczas wysyłania wiadomości:', error);\n        }\n      );\n  }\n\n  deleteMessage(message: Message) {\n    if (!message.id) {\n      console.log('Nie można usunąć wiadomości - brak identyfikatora');\n      return;\n    }\n\n    const token = localStorage.getItem('token'); // Pobierz token z localStorage\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    // Usunięcie wiadomości z serwera\n    this.http.delete(`http://localhost:3000/api/messages/${message.id}`, { headers, responseType: 'text' })\n      .subscribe(\n        response => {\n          console.log('Wiadomość usunięta');\n          this.fetchMessages(); // Odświeżenie wiadomości po usunięciu\n        },\n        error => {\n          console.log('Błąd podczas usuwania wiadomości:', error);\n        }\n      );\n  }\n\n\n  logout() {\n    localStorage.removeItem('token'); // Usunięcie tokenu z localStorage\n    this.isAuthenticated = false;\n    this.router.navigate(['/login']); // Przekierowanie do komponentu logowania\n  }\n}\n","<div style=\"position: fixed; top: 0; right: 0; padding: 10px;\">\n  <button (click)=\"logout()\">Wyloguj</button>\n</div>\n\n<div style=\"margin-top: 50px;\">\n  <h2>Witaj, {{ username }}!</h2>\n\n  <!-- Lista wiadomości -->\n  <div *ngIf=\"messages.length > 0\" style=\"display: flex; flex-direction: column-reverse;\">\n    <div *ngFor=\"let message of messages\" style=\"padding: 10px; margin: 10px; background-color: #f0f0f0; display: flex; justify-content: space-between;\">\n      <div>\n        <span class=\"username\">{{ message.username }}:</span>\n        <span class=\"content\">{{ message.content }}</span>\n      </div>\n      <button *ngIf=\"message.username === username\" (click)=\"deleteMessage(message)\">Usuń</button>\n    </div>\n  </div>\n  <div *ngIf=\"messages.length === 0\">\n    <p>Brak wiadomości do wyświetlenia.</p>\n  </div>\n</div>\n\n<div style=\"position: fixed; bottom: 0; left: 0; right: 0; padding: 10px; background-color: #f0f0f0;\">\n  <form [formGroup]=\"messageForm\" (ngSubmit)=\"submitMessage()\" style=\"display: flex; align-items: center;\">\n    <textarea formControlName=\"content\" rows=\"4\" placeholder=\"Wpisz swoją wiadomość\" style=\"flex: 1;\"></textarea>\n    <button type=\"submit\" [disabled]=\"messageForm.invalid\">Wyślij</button>\n  </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}