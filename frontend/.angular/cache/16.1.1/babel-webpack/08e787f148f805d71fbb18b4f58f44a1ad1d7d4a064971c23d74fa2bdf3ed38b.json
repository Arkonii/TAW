{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction HomeComponent_div_6_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", message_r3.username, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r3.content);\n  }\n}\nfunction HomeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Wiadomo\\u015Bci u\\u017Cytkownik\\u00F3w:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, HomeComponent_div_6_li_4_Template, 5, 2, \"li\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.messages);\n  }\n}\nfunction HomeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Brak wiadomo\\u015Bci do wy\\u015Bwietlenia.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class HomeComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.messages = [];\n    this.username = 'John Doe'; // Nazwa zalogowanego użytkownika\n    this.messageForm = this.formBuilder.group({\n      content: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    // Sprawdź, czy użytkownik jest zalogowany\n    const isAuthenticated = this.checkAuthentication();\n    if (isAuthenticated) {\n      this.fetchMessages();\n    } else {\n      // Przekieruj użytkownika do innej strony\n      this.router.navigate(['/login']);\n    }\n  }\n  checkAuthentication() {\n    // Sprawdź tutaj, czy użytkownik jest zalogowany\n    // Możesz użyć localStorage, cookies lub innego mechanizmu uwierzytelniania\n    // Przykład prostego sprawdzenia, czy zmienna username ma wartość\n    return this.username !== '';\n  }\n  fetchMessages() {\n    // Pobierz wiadomości z serwera i przypisz do tablicy messages\n    this.http.get('http://localhost:3000/api/messages').subscribe(response => {\n      this.messages = response;\n    }, error => {\n      console.log('Błąd podczas pobierania wiadomości:', error);\n    });\n  }\n  submitMessage() {\n    if (this.messageForm.invalid) {\n      return;\n    }\n    const content = this.messageForm.controls['content'].value;\n    // Wysłanie wiadomości do serwera\n    this.http.post('http://localhost:3000/api/messages', {\n      username: this.username,\n      content\n    }).subscribe(response => {\n      console.log('Wiadomość wysłana');\n      this.messageForm.reset();\n      this.fetchMessages(); // Odświeżenie wiadomości po wysłaniu\n    }, error => {\n      console.log('Błąd podczas wysyłania wiadomości:', error);\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 8,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"content\", \"rows\", \"4\", \"placeholder\", \"Wpisz swoj\\u0105 wiadomo\\u015B\\u0107\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"username\"], [1, \"content\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.submitMessage();\n      });\n      i0.ɵɵelement(3, \"textarea\", 1);\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵtext(5, \"Wy\\u015Blij\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, HomeComponent_div_6_Template, 5, 1, \"div\", 3);\n      i0.ɵɵtemplate(7, HomeComponent_div_7_Template, 3, 0, \"div\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Witaj, \", ctx.username, \"!\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.messageForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.messageForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.messages.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.messages.length === 0);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n\\nh1[_ngcontent-%COMP%] {\\n  color: blue;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQWlDO0FBQ2pDO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIFN0eWxlIGZvciB0aGUgSG9tZSBjb21wb25lbnQgKi9cclxuaDEge1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcblxyXG5wIHtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","message_r3","username","ɵɵtextInterpolate","content","ɵɵtemplate","HomeComponent_div_6_li_4_Template","ɵɵproperty","ctx_r0","messages","HomeComponent","constructor","formBuilder","http","router","messageForm","group","required","ngOnInit","isAuthenticated","checkAuthentication","fetchMessages","navigate","get","subscribe","response","error","console","log","submitMessage","invalid","controls","value","post","reset","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵlistener","HomeComponent_Template_form_ngSubmit_2_listener","ɵɵelement","HomeComponent_div_6_Template","HomeComponent_div_7_Template","length"],"sources":["C:\\Users\\Arcio\\Desktop\\Nowy folder\\VI semestr\\Technologie aplikacji webowych\\App\\untitled\\frontend\\src\\app\\home\\home.component.ts","C:\\Users\\Arcio\\Desktop\\Nowy folder\\VI semestr\\Technologie aplikacji webowych\\App\\untitled\\frontend\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\ninterface Message {\n  username: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  username: string;\n  messageForm: FormGroup;\n  messages: Message[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {\n    this.username = 'John Doe'; // Nazwa zalogowanego użytkownika\n    this.messageForm = this.formBuilder.group({\n      content: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    // Sprawdź, czy użytkownik jest zalogowany\n    const isAuthenticated = this.checkAuthentication();\n\n    if (isAuthenticated) {\n      this.fetchMessages();\n    } else {\n      // Przekieruj użytkownika do innej strony\n      this.router.navigate(['/login']);\n    }\n  }\n\n  checkAuthentication(): boolean {\n    // Sprawdź tutaj, czy użytkownik jest zalogowany\n    // Możesz użyć localStorage, cookies lub innego mechanizmu uwierzytelniania\n\n    // Przykład prostego sprawdzenia, czy zmienna username ma wartość\n    return this.username !== '';\n  }\n\n  fetchMessages() {\n    // Pobierz wiadomości z serwera i przypisz do tablicy messages\n    this.http.get<Message[]>('http://localhost:3000/api/messages')\n      .subscribe(\n        response => {\n          this.messages = response;\n        },\n        error => {\n          console.log('Błąd podczas pobierania wiadomości:', error);\n        }\n      );\n  }\n\n  submitMessage() {\n    if (this.messageForm.invalid) {\n      return;\n    }\n\n    const content = this.messageForm.controls['content'].value;\n\n    // Wysłanie wiadomości do serwera\n    this.http.post('http://localhost:3000/api/messages', { username: this.username, content })\n      .subscribe(\n        response => {\n          console.log('Wiadomość wysłana');\n          this.messageForm.reset();\n          this.fetchMessages(); // Odświeżenie wiadomości po wysłaniu\n        },\n        error => {\n          console.log('Błąd podczas wysyłania wiadomości:', error);\n        }\n      );\n  }\n}\n","<h2>Witaj, {{ username }}!</h2>\n\n<!-- Formularz do wprowadzania wiadomości -->\n<form [formGroup]=\"messageForm\" (ngSubmit)=\"submitMessage()\">\n  <textarea formControlName=\"content\" rows=\"4\" placeholder=\"Wpisz swoją wiadomość\"></textarea>\n  <button type=\"submit\" [disabled]=\"messageForm.invalid\">Wyślij</button>\n</form>\n\n<!-- Lista wiadomości -->\n<div *ngIf=\"messages.length > 0\">\n  <h3>Wiadomości użytkowników:</h3>\n  <ul>\n    <li *ngFor=\"let message of messages\">\n      <span class=\"username\">{{ message.username }}:</span>\n      <span class=\"content\">{{ message.content }}</span>\n    </li>\n  </ul>\n</div>\n<div *ngIf=\"messages.length === 0\">\n  <p>Brak wiadomości do wyświetlenia.</p>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}